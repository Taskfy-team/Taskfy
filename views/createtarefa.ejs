<!DOCTYPE html>
<html lang="pt-br">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Taskfy Criar Tarefa</title>
  <script src="/js/jquery.js"></script>
  <script src="/js/menu.js"></script>
  <link rel="stylesheet" href="/stylesheets/createtarefa.css">
  <style>
    .email-input-wrapper {
      display: flex;
      align-items: center;
      gap: 4px;
      border: 1px solid #ccc;
      border-radius: 6px;
      padding: 6px;
      height: 40px;         
      background: #fff;
      overflow-x: auto;      
      white-space: nowrap;   
    }

    .email-list {
      display: inline-flex;
      gap: 4px;
      align-items: center;
    }

    .email-input-wrapper input {
      border: none;
      outline: none;
      flex: 0 0 auto;     
      min-width: 120px;
      padding: 4px 8px;
      font: inherit;
      white-space: nowrap;
    }

    .added-email{
      display:inline-flex;
      align-items:center;
      background:#f0f0f0;
      border:1px solid #4CAF50;
      border-radius:4px;
      padding:4px 8px;
      font-size:.9rem;
      white-space:nowrap;
    }
  </style>
</head>

<body>
<div class="group-container">
  <form action="/cadastrartarefa" method="post" class="main-card" id="form">
    <h2>Criar Tarefa</h2>
    <p>Atividade que faz parte de um grupo. Pode ser atribu√≠da, editada e marcada como conclu√≠da.</p>
    <input type="hidden" name="grupo" value="<%= grupo %>">
    <label class="label">
      <span class="field">Nome da Tarefa</span></br>
      <input type="text" name="taskname" placeholder=" Ex: Tarefa 1"/>
    </label>
    <label class="label">
      <span class="field">Descri√ß√£o da Tarefa</span></br>
      <input type="text" name="taskdesc" placeholder=" Ex: Realizar 1+1" />
    </label>
    <label class="label">
      <span class="field">Adicionar‚ÄØColaboradores‚ÄØ(Email)</span><br>
      <div class="email-input-wrapper" id="email-wrapper">
        <div id="email-list" class="email-list"></div> <!-- chips v√£o aqui -->
        <input
          type="text"
          id="taskcolabs"
          placeholder=" Adicionar Membros"
          autocomplete="off"
        />
      </div>
    </label>
    <label class="label">
      <span class="field">Data de Entrega</span></br>
      <input type="date" name="user" />
    </label>
    <label class="label">
      <span class="field">Status Inicial da tarefa</span></br>
      <select name="taskinitstat">
        <option value="Aberta">Aberta</option>
        <option value="Em andamento">Em andamento</option>
        <option value="Fechada">Fechada</option>
      </select>
    </label>
    <button class="btn-submit">Criar</button>
  </form>
</div>

</body>
<script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
<script>
    initMenu("criar");
    const addedEmails = [];

  function isValidEmail(email) {
    const valid = /\S+@\S+\.\S+/.test(email);
    return valid;
  }

  async function verificarEmailExistente(email) {
    try {
      const res = await fetch(`/verificaremail`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ email })
      });
      const json = await res.json();
      console.log("üì¨ Resposta do servidor:", json);
      return json.exists;
    } catch (err) {
      console.error("Erro ao verificar e-mail:", err);
      return false;
    }
  }

  function renderEmail(email){
    $('#email-list').append(`<span class="added-email">${email}</span>`);
    $('#form').append(`<input type="hidden" name="taskcolab" value="${email}">`);
  }

  $('#taskcolabs').on('keydown', async function(e) {
    console.log("‚å®Ô∏è Tecla pressionada:", e.key);
    if (e.key === ' ' || e.key === 'Spacebar') {
      e.preventDefault();

      const email = this.value.trim();
      console.log("üì© E-mail digitado:", email);

      if (!isValidEmail(email)) {
        alert("Email inv√°lido!");
        return;
      }

      if (addedEmails.includes(email)) {
        alert("Este e-mail j√° foi adicionado.");
        this.value = "";
        return;
      }

      const existe = await verificarEmailExistente(email);

      if (existe) {
        addedEmails.push(email);
        renderEmail(email);
        this.value = "";
        console.log("‚úÖ E-mail adicionado:", email);
      } else {
        alert("Email n√£o encontrado.");
        console.log("‚ùå E-mail n√£o existe no sistema:", email);
      }
    }
  });
</script>
</html>